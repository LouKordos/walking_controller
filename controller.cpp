#include <iostream>
#include <eigen3/Eigen/Dense>
#include <eigen3/Eigen/QR>

#include <chrono>
#include <thread>
#include <mutex>

#include <fstream>

#include <string>
#include <random>
#include <zmq.hpp>
#include <ctime>
#include <cmath>

#include <stdlib.h>
	
#include <boost/algorithm/string.hpp>

#include <unistd.h>
#include <zcm/zcm-cpp.hpp>
#include <leg_state.hpp>
#include <sys/types.h>

//#include "model_functions.cpp"

using namespace std;
using namespace std::chrono;

using Eigen::MatrixXd;

#pragma region Constants

double Ixx_hip3 = 1.249e-04;
double Ixy_hip3 = 0;
double Ixz_hip3 = 0;

double Iyx_hip3 = 0;
double Iyy_hip3 = 9.241e-05;
double Iyz_hip3 = 0;

double Izx_hip3 = 0;
double Izy_hip3 = 0;
double Izz_hip3 = 9.241e-05;

double Ixx_hip2 = 1.249e-04;
double Ixy_hip2 = 0;
double Ixz_hip2 = 0;

double Iyx_hip2 = 0;
double Iyy_hip2 = 9.241e-05;
double Iyz_hip2 = 0;

double Izx_hip2 = 0;
double Izy_hip2 = 0;
double Izz_hip2 = 9.241e-05;


double Ixx_hip1 = 1.249e-04;
double Ixy_hip1 = 0;
double Ixz_hip1 = 0;

double Iyx_hip1 = 0;
double Iyy_hip1 = 9.241e-05;
double Iyz_hip1 = 0;

double Izx_hip1 = 0;
double Izy_hip1 = 0;
double Izz_hip1 = 9.241e-05;

double Ixx_ul = 7.982e-04;
double Ixy_ul = 0;
double Ixz_ul = 0;

double Iyx_ul = 0;
double Iyy_ul = 7.982e-04;
double Iyz_ul = 0;

double Izx_ul = 0;
double Izy_ul = 0;
double Izz_ul = 9.391e-05;


double Ixx_ll = 7.982e-04;
double Ixy_ll = 0;
double Ixz_ll = 0;

double Iyx_ll = 0;
double Iyy_ll = 7.982e-04;
double Iyz_ll = 0;

double Izx_ll = 0;
double Izy_ll = 0;
double Izz_ll = 9.391e-05;

double Ixx_foot = 2.733e-05;
double Ixy_foot = 0;
double Ixz_foot = 0;

double Iyx_foot = 0;
double Iyy_foot = 5.666e-06;
double Iyz_foot = 0;

double Izx_foot = 0;
double Izy_foot = 0;
double Izz_foot = 3.233e-05;

double l1 = 0;
double l2 = 0.145;
double l3 = 0.145;
double l4 = 0.41;
double l5 = 0.375;
double l6 = 0.04;

double l1_CoM = l1;
double l2_CoM = l2;
double l3_CoM = l3;
double l4_CoM = l4/2;
double l5_CoM = l5/2;
double l6_CoM = l6-0.01;

double m_hip3 = 0.1;
double m_hip2 = 0.1;
double m_hip1 = 0.1;
double m_ul = 0.1;
double m_ll = 0.1;
double m_foot = 0.01;

double g = 9.81;

double upper_torque_limit = 50;
double lower_torque_limit = -50;

#pragma endregion Constants

double omega_desired = 8;

zcm::ZCM zcm_context {"ipc"};

#pragma region Left leg

std::mutex q_left_leg_mutex, q_dot_left_leg_mutex;

Eigen::Matrix<double, 5, 1> q_left_leg;
Eigen::Matrix<double, 5, 1> q_dot_left_leg;

Eigen::Matrix<double, 5, 1> C_left_leg;
Eigen::Matrix<double, 5, 5> B_left_leg;
Eigen::Matrix<double, 5, 1> G_left_leg;

Eigen::Matrix<double, 3, 5> J_foot_left_leg;
Eigen::Matrix<double, 3, 5> J_foot_dot_left_leg;

Eigen::Matrix<double, 3, 3> Lambda_left_leg;

Eigen::Matrix<double, 3, 3> Kp_left_leg;
Eigen::Matrix<double, 3, 3> Kd_left_leg;

Eigen::Matrix<double, 5, 1> tau_ff_left_leg;
Eigen::Matrix<double, 5, 1> tau_setpoint_left_leg;

Eigen::Matrix<double, 3, 1> foot_pos_left_leg;
Eigen::Matrix<double, 3, 1> foot_vel_left_leg;

Eigen::Matrix<double, 3, 1> pos_desired_left_leg;
Eigen::Matrix<double, 3, 1> vel_desired_left_leg;
Eigen::Matrix<double, 3, 1> accel_desired_left_leg;

void update_q_left_leg(double theta1, double theta2, double theta3, double theta4, double theta5) {
    q_left_leg << theta1,
                  theta2,
                  theta3,
                  theta4,
                  theta5;
}

void update_q_dot_left_leg(double theta1dot, double theta2dot, double theta3dot, double theta4dot, double theta5dot) {
    q_dot_left_leg << theta1dot,
                      theta2dot,
                      theta3dot,
                      theta4dot,
                      theta5dot;
}

void update_B_left_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5, double thetadot1, double theta2dot, double theta3dot, double theta4dot, double theta5dot) {
    double B_1 = Izz_hip2 + pow(l3_CoM,2)*m_hip1*pow(sin(theta_1),2)*pow(sin(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(sin(theta_2),2)*pow(cos(theta_1),2) + m_foot*pow((-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)),2) + m_foot*pow((-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)),2) + m_ll*pow((-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)),2) + m_ll*pow((-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)),2) + m_ul*pow((-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)),2) + m_ul*pow((l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)),2) - (-Ixx_hip1*sin(theta_2) + Izx_hip1*cos(theta_2))*sin(theta_2) + (-Ixz_hip1*sin(theta_2) + Izz_hip1*cos(theta_2))*cos(theta_2) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) - (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*sin(theta_2) - (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*sin(theta_2) - (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*sin(theta_2) + (-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3))*sin(theta_3)*cos(theta_2) + (-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3))*cos(theta_2)*cos(theta_3);
    
    double B_2 = -m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1))*sin(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2))*cos(theta_1)*cos(theta_2) + (-Ixx_hip1*sin(theta_2) + Izx_hip1*cos(theta_2))*sin(theta_1)*cos(theta_2) + (-Ixy_hip1*sin(theta_2) + Izy_hip1*cos(theta_2))*cos(theta_1) + (-Ixz_hip1*sin(theta_2) + Izz_hip1*cos(theta_2))*sin(theta_1)*sin(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3)) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3)) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*sin(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*sin(theta_1)*cos(theta_2) + (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*sin(theta_1)*cos(theta_2);
    
    double B_3 = l4_CoM*m_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)) + l4_CoM*m_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_ll*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3)) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3)) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*cos(theta_1)*cos(theta_2) + (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*cos(theta_1)*cos(theta_2);
    
    double B_4 = l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_5 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_6 = -m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1))*sin(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2))*cos(theta_1)*cos(theta_2) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) - (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*sin(theta_2) - (Ixx_hip1*sin(theta_1)*cos(theta_2) + Iyx_hip1*cos(theta_1) + Izx_hip1*sin(theta_1)*sin(theta_2))*sin(theta_2) - (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*sin(theta_2) - (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_2) + (Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_3)*cos(theta_2) + (Ixz_hip1*sin(theta_1)*cos(theta_2) + Iyz_hip1*cos(theta_1) + Izz_hip1*sin(theta_1)*sin(theta_2))*cos(theta_2) + (Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*cos(theta_2)*cos(theta_3);
    
    double B_7 = pow(l3_CoM,2)*m_hip1*pow(sin(theta_1),2)*pow(cos(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(sin(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(sin(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_hip1*sin(theta_1)*cos(theta_2) + Iyx_hip1*cos(theta_1) + Izx_hip1*sin(theta_1)*sin(theta_2))*sin(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*sin(theta_1)*cos(theta_2) + (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_1)*cos(theta_2) + (Ixy_hip1*sin(theta_1)*cos(theta_2) + Iyy_hip1*cos(theta_1) + Izy_hip1*sin(theta_1)*sin(theta_2))*cos(theta_1) + (Ixz_hip1*sin(theta_1)*cos(theta_2) + Iyz_hip1*cos(theta_1) + Izz_hip1*sin(theta_1)*sin(theta_2))*sin(theta_1)*sin(theta_2);
    
    double B_8 = -l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) + l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2)*sin(theta_3)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*cos(theta_1)*cos(theta_2) + (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*cos(theta_1)*cos(theta_2);
    
    double B_9 = -l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l5_CoM*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_10 = -l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l6_CoM*m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_11 = l4_CoM*m_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)) + l4_CoM*m_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_ll*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2) - (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_2) - (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_2) + (Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_3)*cos(theta_2) + (Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*cos(theta_2)*cos(theta_3);
    
    double B_12 = -l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) + l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2)*sin(theta_3)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_1)*cos(theta_2) + (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_1)*cos(theta_2);
    
    double B_13 = pow(l4_CoM,2)*m_ul*pow((-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + pow(l4_CoM,2)*m_ul*pow((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)),2) + pow(l4_CoM,2)*m_ul*pow(sin(theta_3),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3)),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + m_ll*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))),2) + m_ll*pow((l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3)),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2) + (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*cos(theta_1)*cos(theta_2);
    
    double B_14 = l5_CoM*m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l5_CoM*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*sin(theta_3 + theta_4)*pow(cos(theta_2),2) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*pow(cos(theta_2),2) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_15 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_16 = l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2) - (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_2);
    
    double B_17 = -l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l5_CoM*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_1)*cos(theta_2);
    
    double B_18 = l5_CoM*m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l5_CoM*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*sin(theta_3 + theta_4)*pow(cos(theta_2),2) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*pow(cos(theta_2),2) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_19 = pow(l5_CoM,2)*m_ll*pow((sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)),2) + pow(l5_CoM,2)*m_ll*pow((sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4)),2) + pow(l5_CoM,2)*m_ll*pow(sin(theta_3 + theta_4),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_20 = l6_CoM*m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_21 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2);
    
    double B_22 = -l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l6_CoM*m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2);
    
    double B_23 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_24 = l6_CoM*m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_25 = pow(l6_CoM,2)*m_foot*pow((sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)),2) + pow(l6_CoM,2)*m_foot*pow((sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5)),2) + pow(l6_CoM,2)*m_foot*pow(sin(theta_3 + theta_4 + theta_5),2)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    B_left_leg << B_1, B_2, B_3, B_4, B_5,
                  B_6, B_7, B_8, B_9, B_10,
                  B_11, B_12, B_13, B_14, B_15,
                  B_16, B_17, B_18, B_19, B_20,
                  B_21, B_22, B_23, B_24, B_25;
}

void update_G_left_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5) {
    
    double g1 = 0;
    double g2 = g*l3_CoM*m_hip1*sin(theta_2) + g*m_foot*(l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4))*sin(theta_2) + g*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2) + g*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2);
    double g3 = g*l4_CoM*m_ul*sin(theta_3)*cos(theta_2) + g*m_foot*(l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3) + l5*sin(theta_3 + theta_4))*cos(theta_2) + g*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*cos(theta_2);
    double g4 = g*l5_CoM*m_ll*sin(theta_3 + theta_4)*cos(theta_2) + g*m_foot*(l6_CoM*sin(theta_3 + theta_4 + theta_5) + l5*sin(theta_3 + theta_4))*cos(theta_2);
    double g5 = g*l6_CoM*m_foot*sin(theta_3 + theta_4 + theta_5)*cos(theta_2);

    G_left_leg << g1, g2, g3, g4, g5;
}


void update_J_foot_left_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5) {

    double J_foot_1 = l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1) - l5*sin(theta_3 + theta_4)*cos(theta_1) + l5*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_2 = -(l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2);
    double J_foot_3 = -l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1) + l5*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*sin(theta_1)*cos(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*sin(theta_1)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_4 = l5*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*sin(theta_1)*cos(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*sin(theta_1)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_5 = l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5));
    double J_foot_6 = -l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3) - l5*sin(theta_3 + theta_4)*sin(theta_1) - l5*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1);
    double J_foot_7 = -(l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*sin(theta_1)*cos(theta_2);
    double J_foot_8 = l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + l5*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_9 = l5*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_10 = l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_11 = 0;
    double J_foot_12 = (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*sin(theta_2);
    double J_foot_13 = (l4*sin(theta_3) + l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_14 = (l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_15 = l6*sin(theta_3 + theta_4 + theta_5)*cos(theta_2);

    J_foot_left_leg << J_foot_1, J_foot_2, J_foot_3, J_foot_4, J_foot_5,
                        J_foot_6, J_foot_7, J_foot_8, J_foot_9, J_foot_10,
                        J_foot_11, J_foot_12, J_foot_13, J_foot_14, J_foot_15;
}

void update_J_foot_dot_left_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5, double thetadot1, double thetadot2, double thetadot3, double thetadot4, double thetadot5) {

    double J_foot_dot_1 = l3*thetadot1*sin(theta_2)*cos(theta_1) + l3*thetadot2*sin(theta_1)*cos(theta_2) + l4*thetadot1*sin(theta_1)*sin(theta_3) + l4*thetadot1*sin(theta_2)*cos(theta_1)*cos(theta_3) + l4*thetadot2*sin(theta_1)*cos(theta_2)*cos(theta_3) - l4*thetadot3*sin(theta_1)*sin(theta_2)*sin(theta_3) - l4*thetadot3*cos(theta_1)*cos(theta_3) - l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1) + l5*thetadot1*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_1)*cos(theta_3 + theta_4)*cos(theta_2) - l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*thetadot1*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)*cos(theta_2);
    double J_foot_dot_2 = (l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot1*sin(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2)*cos(theta_1);
    double J_foot_dot_3 = -l4*thetadot1*sin(theta_1)*sin(theta_2)*sin(theta_3) - l4*thetadot1*cos(theta_1)*cos(theta_3) + l4*thetadot2*sin(theta_3)*cos(theta_1)*cos(theta_2) + l4*thetadot3*sin(theta_1)*sin(theta_3) + l4*thetadot3*sin(theta_2)*cos(theta_1)*cos(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*thetadot1*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_4 = l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*thetadot1*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_5 = l6*((thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2));
    double J_foot_dot_6 = l3*thetadot1*sin(theta_1)*sin(theta_2) - l3*thetadot2*cos(theta_1)*cos(theta_2) + l4*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*thetadot1*sin(theta_3)*cos(theta_1) - l4*thetadot2*cos(theta_1)*cos(theta_2)*cos(theta_3) - l4*thetadot3*sin(theta_1)*cos(theta_3) + l4*thetadot3*sin(theta_2)*sin(theta_3)*cos(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*(thetadot3 + thetadot4)*sin(theta_1)*cos(theta_3 + theta_4) - l5*thetadot1*sin(theta_3 + theta_4)*cos(theta_1) + l5*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l5*thetadot2*cos(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) - l6*thetadot2*cos(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_7 = (l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*sin(theta_1)*cos(theta_2) - (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot1*cos(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_1)*sin(theta_2);
    double J_foot_dot_8 = l4*(-thetadot1*sin(theta_1)*cos(theta_3) + thetadot1*sin(theta_2)*sin(theta_3)*cos(theta_1) + thetadot2*sin(theta_1)*sin(theta_3)*cos(theta_2) + thetadot3*sin(theta_1)*sin(theta_2)*cos(theta_3) - thetadot3*sin(theta_3)*cos(theta_1)) + l5*(-(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*cos(theta_1) + (thetadot3 + thetadot4)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + thetadot1*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4) + thetadot2*sin(theta_3 + theta_4)*sin(theta_1)*cos(theta_2)) + l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_9 = l5*(-(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*cos(theta_1) + (thetadot3 + thetadot4)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + thetadot1*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4) + thetadot2*sin(theta_3 + theta_4)*sin(theta_1)*cos(theta_2)) + l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_10 = l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_11 = 0;
    double J_foot_dot_12 = -(l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*sin(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*cos(theta_2);
    double J_foot_dot_13 = -(l4*sin(theta_3) + l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2) + (l4*thetadot3*cos(theta_3) + l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_dot_14 = -(l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2) + (l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_dot_15 = l6*((thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5)*cos(theta_2) - thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_2));
    
    J_foot_dot_left_leg << J_foot_dot_1, J_foot_dot_2, J_foot_dot_3, J_foot_dot_4, J_foot_dot_5,
                            J_foot_dot_6, J_foot_dot_7, J_foot_dot_8, J_foot_dot_9, J_foot_dot_10,
                            J_foot_dot_11, J_foot_dot_12, J_foot_dot_13, J_foot_dot_14, J_foot_dot_15;
}

void update_Lambda_left_leg() {
    // Lambda_t = np.linalg.inv(J_t.dot(B_t_inv).dot(J_t.T))
    Lambda_left_leg = (J_foot_left_leg * B_left_leg.inverse() * J_foot_left_leg.transpose()).inverse();
}

void update_Kp_left_leg() {
    Kp_left_leg << pow(omega_desired, 2) * Lambda_left_leg(0, 0), 0, 0,
                    0, pow(omega_desired, 2) * Lambda_left_leg(1, 1), 0,
                    0, 0, pow(omega_desired, 2) * Lambda_left_leg(2, 2);
    // Kp_left_leg << 1, 0, 0,
    //                 0, 1, 0,
    //                 0, 0, 1;
}

void update_Kd_left_leg() {
    Kd_left_leg << 0.2, 0, 0,
                   0, 0.2, 0,
                   0, 0, 0.2;
}

void update_tau_ff_left_leg() {
    //tau_ff = J_t.T.dot(Lambda_t).dot(a_des - J_dot_t.dot(q_dot_t)) + C_t + g_t
    tau_ff_left_leg = G_left_leg /* + C* + J_foot.transpose() * Lambda * (accel_desired - J_foot_dot * q_dot)*/;
}

void update_foot_pos_left_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5,
 double thetadot1, double thetadot2, double thetadot3, double thetadot4, double thetadot5) {
    double foot_pos_1 = -l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3) - l5*sin(theta_3 + theta_4)*sin(theta_1) - l5*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1);
    double foot_pos_2 = -l3*sin(theta_1)*sin(theta_2) - l4*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)) + l5*(sin(theta_3 + theta_4)*cos(theta_1) - sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4)) + l6*(sin(theta_3 + theta_4 + theta_5)*cos(theta_1) - sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5));
    double foot_pos_3 = -l1 - l2 - l3*cos(theta_2) - l4*cos(theta_2)*cos(theta_3) - l5*cos(theta_3 + theta_4)*cos(theta_2) - l6*cos(theta_3 + theta_4 + theta_5)*cos(theta_2);

    foot_pos_left_leg << foot_pos_1,
                         foot_pos_2,
                         foot_pos_3;
}

void update_foot_vel_left_leg(Eigen::Matrix<double, 5, 1> q_dot) {
    foot_vel_left_leg = J_foot_left_leg * q_dot;
}

void update_tau_setpoint_left_leg() {
    //tau_setpoint_t = J_t.T.dot(K_p.dot(p_des - p_t) + K_d.dot(v_des - v_t)) + tau_ff_t
    tau_setpoint_left_leg = J_foot_left_leg.transpose() * (Kp_left_leg * (pos_desired_left_leg - foot_pos_left_leg) + Kd_left_leg * (vel_desired_left_leg - foot_vel_left_leg)) + tau_ff_left_leg;
}

#pragma endregion Left leg

#pragma region Right leg

std::mutex q_right_leg_mutex, q_dot_right_leg_mutex;

Eigen::Matrix<double, 5, 1> q_right_leg;
Eigen::Matrix<double, 5, 1> q_dot_right_leg;

Eigen::Matrix<double, 5, 1> C_right_leg;
Eigen::Matrix<double, 5, 5> B_right_leg;
Eigen::Matrix<double, 5, 1> G_right_leg;

Eigen::Matrix<double, 3, 5> J_foot_right_leg;
Eigen::Matrix<double, 3, 5> J_foot_dot_right_leg;

Eigen::Matrix<double, 3, 3> Lambda_right_leg;

Eigen::Matrix<double, 3, 3> Kp_right_leg;
Eigen::Matrix<double, 3, 3> Kd_right_leg;

Eigen::Matrix<double, 5, 1> tau_ff_right_leg;
Eigen::Matrix<double, 5, 1> tau_setpoint_right_leg;

Eigen::Matrix<double, 3, 1> foot_pos_right_leg;
Eigen::Matrix<double, 3, 1> foot_vel_right_leg;

Eigen::Matrix<double, 3, 1> pos_desired_right_leg;
Eigen::Matrix<double, 3, 1> vel_desired_right_leg;
Eigen::Matrix<double, 3, 1> accel_desired_right_leg;

void update_q_right_leg(double theta1, double theta2, double theta3, double theta4, double theta5) {
    q_right_leg << theta1,
                  theta2,
                  theta3,
                  theta4,
                  theta5;
}

void update_q_dot_right_leg(double theta1dot, double theta2dot, double theta3dot, double theta4dot, double theta5dot) {
    q_dot_right_leg << theta1dot,
                      theta2dot,
                      theta3dot,
                      theta4dot,
                      theta5dot;
}

void update_B_right_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5, double thetadot1, double theta2dot, double theta3dot, double theta4dot, double theta5dot) {
    double B_1 = Izz_hip2 + pow(l3_CoM,2)*m_hip1*pow(sin(theta_1),2)*pow(sin(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(sin(theta_2),2)*pow(cos(theta_1),2) + m_foot*pow((-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)),2) + m_foot*pow((-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)),2) + m_ll*pow((-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)),2) + m_ll*pow((-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)),2) + m_ul*pow((-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)),2) + m_ul*pow((l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)),2) - (-Ixx_hip1*sin(theta_2) + Izx_hip1*cos(theta_2))*sin(theta_2) + (-Ixz_hip1*sin(theta_2) + Izz_hip1*cos(theta_2))*cos(theta_2) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) - (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*sin(theta_2) - (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*sin(theta_2) - (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*sin(theta_2) + (-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3))*sin(theta_3)*cos(theta_2) + (-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3))*cos(theta_2)*cos(theta_3);
    
    double B_2 = -m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1))*sin(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2))*cos(theta_1)*cos(theta_2) + (-Ixx_hip1*sin(theta_2) + Izx_hip1*cos(theta_2))*sin(theta_1)*cos(theta_2) + (-Ixy_hip1*sin(theta_2) + Izy_hip1*cos(theta_2))*cos(theta_1) + (-Ixz_hip1*sin(theta_2) + Izz_hip1*cos(theta_2))*sin(theta_1)*sin(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3)) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3)) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*sin(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*sin(theta_1)*cos(theta_2) + (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*sin(theta_1)*cos(theta_2);
    
    double B_3 = l4_CoM*m_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)) + l4_CoM*m_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_ll*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(-Ixz_ul*sin(theta_2) + Iyz_ul*sin(theta_3)*cos(theta_2) + Izz_ul*cos(theta_2)*cos(theta_3)) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(-Ixy_ul*sin(theta_2) + Iyy_ul*sin(theta_3)*cos(theta_2) + Izy_ul*cos(theta_2)*cos(theta_3)) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*cos(theta_1)*cos(theta_2) + (-Ixx_ul*sin(theta_2) + Iyx_ul*sin(theta_3)*cos(theta_2) + Izx_ul*cos(theta_2)*cos(theta_3))*cos(theta_1)*cos(theta_2);
    
    double B_4 = l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(-Ixy_ll*sin(theta_2) + Iyy_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izy_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(-Ixz_ll*sin(theta_2) + Iyz_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izz_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (-Ixx_ll*sin(theta_2) + Iyx_ll*(sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3)) + Izx_ll*(-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_5 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(-Ixz_foot*sin(theta_2) + Iyz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izz_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(-Ixy_foot*sin(theta_2) + Iyy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izy_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))) + (-Ixx_foot*sin(theta_2) + Iyx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5)) + Izx_foot*((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_6 = -m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1))*sin(theta_1)*cos(theta_2) - m_ul*(l4_CoM*cos(theta_3) + l3)*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2))*cos(theta_1)*cos(theta_2) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) - (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*sin(theta_2) - (Ixx_hip1*sin(theta_1)*cos(theta_2) + Iyx_hip1*cos(theta_1) + Izx_hip1*sin(theta_1)*sin(theta_2))*sin(theta_2) - (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*sin(theta_2) - (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_2) + (Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_3)*cos(theta_2) + (Ixz_hip1*sin(theta_1)*cos(theta_2) + Iyz_hip1*cos(theta_1) + Izz_hip1*sin(theta_1)*sin(theta_2))*cos(theta_2) + (Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*cos(theta_2)*cos(theta_3);
    
    double B_7 = pow(l3_CoM,2)*m_hip1*pow(sin(theta_1),2)*pow(cos(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(sin(theta_2),2) + pow(l3_CoM,2)*m_hip1*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_2),2) + m_foot*pow((l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3)),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(sin(theta_2),2) + m_ll*pow((l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3)),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(sin(theta_1),2)*pow(cos(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(sin(theta_2),2) + m_ul*pow((l4_CoM*cos(theta_3) + l3),2)*pow(cos(theta_1),2)*pow(cos(theta_2),2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_hip1*sin(theta_1)*cos(theta_2) + Iyx_hip1*cos(theta_1) + Izx_hip1*sin(theta_1)*sin(theta_2))*sin(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*sin(theta_1)*cos(theta_2) + (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*sin(theta_1)*cos(theta_2) + (Ixy_hip1*sin(theta_1)*cos(theta_2) + Iyy_hip1*cos(theta_1) + Izy_hip1*sin(theta_1)*sin(theta_2))*cos(theta_1) + (Ixz_hip1*sin(theta_1)*cos(theta_2) + Iyz_hip1*cos(theta_1) + Izz_hip1*sin(theta_1)*sin(theta_2))*sin(theta_1)*sin(theta_2);
    
    double B_8 = -l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) + l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2)*sin(theta_3)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(Ixz_ul*sin(theta_1)*cos(theta_2) + Iyz_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izz_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(Ixy_ul*sin(theta_1)*cos(theta_2) + Iyy_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izy_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*cos(theta_1)*cos(theta_2) + (Ixx_ul*sin(theta_1)*cos(theta_2) + Iyx_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + Izx_ul*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)))*cos(theta_1)*cos(theta_2);
    
    double B_9 = -l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l5_CoM*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*sin(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izy_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*sin(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izz_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*sin(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4)) + Izx_ll*(-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_10 = -l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l6_CoM*m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*sin(theta_1)*cos(theta_2) + Iyz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izz_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*sin(theta_1)*cos(theta_2) + Iyy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izy_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))) + (Ixx_foot*sin(theta_1)*cos(theta_2) + Iyx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)) + Izx_foot*((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_11 = l4_CoM*m_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(l4_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4_CoM*sin(theta_3)*cos(theta_1) + l3*sin(theta_1)*sin(theta_2)) + l4_CoM*m_ul*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(-l4_CoM*sin(theta_1)*sin(theta_3) - l4_CoM*sin(theta_2)*cos(theta_1)*cos(theta_3) - l3*sin(theta_2)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_ll*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2) - (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_2) - (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_2) + (Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_3)*cos(theta_2) + (Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*cos(theta_2)*cos(theta_3);
    
    double B_12 = -l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_1)*cos(theta_2) + l4_CoM*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2)*sin(theta_3)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) - m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_1)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*(Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*(Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_1)*cos(theta_2) + (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*sin(theta_1)*cos(theta_2);
    
    double B_13 = pow(l4_CoM,2)*m_ul*pow((-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + pow(l4_CoM,2)*m_ul*pow((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)),2) + pow(l4_CoM,2)*m_ul*pow(sin(theta_3),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3)),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + m_ll*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))),2) + m_ll*pow((l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3)),2)*pow(cos(theta_2),2) + m_ll*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*(Ixz_ul*cos(theta_1)*cos(theta_2) + Iyz_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izz_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*(Ixy_ul*cos(theta_1)*cos(theta_2) + Iyy_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izy_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2) + (Ixx_ul*cos(theta_1)*cos(theta_2) + Iyx_ul*(-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1)) + Izx_ul*(sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3)))*cos(theta_1)*cos(theta_2);
    
    double B_14 = l5_CoM*m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l5_CoM*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*sin(theta_3 + theta_4)*pow(cos(theta_2),2) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*pow(cos(theta_2),2) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_15 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_16 = l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2) - (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_2);
    
    double B_17 = -l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l5_CoM*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2)*cos(theta_2) - m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*sin(theta_1)*cos(theta_2);
    
    double B_18 = l5_CoM*m_ll*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)))*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l5_CoM*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*sin(theta_3 + theta_4)*pow(cos(theta_2),2) + l5_CoM*m_ll*(sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*pow(cos(theta_2),2) + m_foot*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_19 = pow(l5_CoM,2)*m_ll*pow((sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)),2) + pow(l5_CoM,2)*m_ll*pow((sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4)),2) + pow(l5_CoM,2)*m_ll*pow(sin(theta_3 + theta_4),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)),2)*pow(cos(theta_2),2) + m_foot*pow((l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*(Ixy_ll*cos(theta_1)*cos(theta_2) + Iyy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izy_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*(Ixz_ll*cos(theta_1)*cos(theta_2) + Iyz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izz_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2) + (Ixx_ll*cos(theta_1)*cos(theta_2) + Iyx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4)) + Izx_ll*((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4)))*cos(theta_1)*cos(theta_2);
    
    double B_20 = l6_CoM*m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_21 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(-l5_CoM*sin(theta_3 + theta_4)*sin(theta_1) - l5_CoM*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6_CoM*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3)) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(-l5_CoM*sin(theta_3 + theta_4)*cos(theta_1) + l5_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6_CoM*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6_CoM*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1)) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*sin(theta_5) + (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-sin(theta_3)*sin(theta_4)*cos(theta_2) + cos(theta_2)*cos(theta_3)*cos(theta_4))*cos(theta_5) - (sin(theta_3)*cos(theta_2)*cos(theta_4) + sin(theta_4)*cos(theta_2)*cos(theta_3))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) - (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_2);
    
    double B_22 = -l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_1)*cos(theta_2) - l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*cos(theta_1)*cos(theta_2) + l6_CoM*m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_2) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + ((-(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*sin(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) - ((sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))*cos(theta_4) + (sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*sin(theta_1)*cos(theta_2);
    
    double B_23 = l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1))*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3))) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_24 = l6_CoM*m_foot*(l5_CoM*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6_CoM*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)))*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)) + l6_CoM*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*sin(theta_3 + theta_4 + theta_5)*pow(cos(theta_2),2) + l6_CoM*m_foot*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5))*(l5_CoM*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5_CoM*sin(theta_1)*cos(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6_CoM*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    double B_25 = pow(l6_CoM,2)*m_foot*pow((sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1)),2) + pow(l6_CoM,2)*m_foot*pow((sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5)),2) + pow(l6_CoM,2)*m_foot*pow(sin(theta_3 + theta_4 + theta_5),2)*pow(cos(theta_2),2) + (-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))*(Ixz_foot*cos(theta_1)*cos(theta_2) + Iyz_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izz_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5))*(Ixy_foot*cos(theta_1)*cos(theta_2) + Iyy_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izy_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5))) + (Ixx_foot*cos(theta_1)*cos(theta_2) + Iyx_foot*(((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*cos(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*sin(theta_5)) + Izx_foot*(-((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*sin(theta_4) + (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*cos(theta_4))*sin(theta_5) + ((sin(theta_1)*sin(theta_3) + sin(theta_2)*cos(theta_1)*cos(theta_3))*cos(theta_4) - (-sin(theta_1)*cos(theta_3) + sin(theta_2)*sin(theta_3)*cos(theta_1))*sin(theta_4))*cos(theta_5)))*cos(theta_1)*cos(theta_2);
    
    B_right_leg << B_1, B_2, B_3, B_4, B_5,
                  B_6, B_7, B_8, B_9, B_10,
                  B_11, B_12, B_13, B_14, B_15,
                  B_16, B_17, B_18, B_19, B_20,
                  B_21, B_22, B_23, B_24, B_25;
}

void update_G_right_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5) {
    
    double g1 = 0;
    double g2 = -g*l3_CoM*m_hip1*sin(theta_2) - g*m_foot*(l5_CoM*cos(theta_3 + theta_4) + l6_CoM*cos(theta_3 + theta_4 + theta_5) + l3 + l4*cos(theta_3))*sin(theta_2) - g*m_ll*(l5_CoM*cos(theta_3 + theta_4) + l3 + l4*cos(theta_3))*sin(theta_2) - g*m_ul*(l4_CoM*cos(theta_3) + l3)*sin(theta_2);
    double g3 = -g*l4_CoM*m_ul*sin(theta_3)*cos(theta_2) - g*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5) + l4*sin(theta_3))*cos(theta_2) - g*m_ll*(l5_CoM*sin(theta_3 + theta_4) + l4*sin(theta_3))*cos(theta_2);
    double g4 = -g*l5_CoM*m_ll*sin(theta_3 + theta_4)*cos(theta_2) - g*m_foot*(l5_CoM*sin(theta_3 + theta_4) + l6_CoM*sin(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double g5 = -g*l6_CoM*m_foot*sin(theta_3 + theta_4 + theta_5)*cos(theta_2);

    G_right_leg << g1, g2, g3, g4, g5;
}


void update_J_foot_right_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5) {

    double J_foot_1 = l3*sin(theta_1)*sin(theta_2) + l4*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*sin(theta_3)*cos(theta_1) - l5*sin(theta_3 + theta_4)*cos(theta_1) + l5*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l6*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_2 = -(l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2);
    double J_foot_3 = -l4*sin(theta_1)*cos(theta_3) + l4*sin(theta_2)*sin(theta_3)*cos(theta_1) + l5*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*sin(theta_1)*cos(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*sin(theta_1)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_4 = l5*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*sin(theta_1)*cos(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*sin(theta_1)*cos(theta_3 + theta_4 + theta_5);
    double J_foot_5 = l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - sin(theta_1)*cos(theta_3 + theta_4 + theta_5));
    double J_foot_6 = -l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3) - l5*sin(theta_3 + theta_4)*sin(theta_1) - l5*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1);
    double J_foot_7 = -(l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*sin(theta_1)*cos(theta_2);
    double J_foot_8 = l4*(sin(theta_1)*sin(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)) + l5*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_9 = l5*(sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4)*cos(theta_1)) + l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_10 = l6*(sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) + cos(theta_3 + theta_4 + theta_5)*cos(theta_1));
    double J_foot_11 = 0;
    double J_foot_12 = (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*sin(theta_2);
    double J_foot_13 = (l4*sin(theta_3) + l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_14 = (l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_15 = l6*sin(theta_3 + theta_4 + theta_5)*cos(theta_2);

    J_foot_right_leg << J_foot_1, J_foot_2, J_foot_3, J_foot_4, J_foot_5,
                        J_foot_6, J_foot_7, J_foot_8, J_foot_9, J_foot_10,
                        J_foot_11, J_foot_12, J_foot_13, J_foot_14, J_foot_15;
}

void update_J_foot_dot_right_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5, double thetadot1, double thetadot2, double thetadot3, double thetadot4, double thetadot5) {

    double J_foot_dot_1 = l3*thetadot1*sin(theta_2)*cos(theta_1) + l3*thetadot2*sin(theta_1)*cos(theta_2) + l4*thetadot1*sin(theta_1)*sin(theta_3) + l4*thetadot1*sin(theta_2)*cos(theta_1)*cos(theta_3) + l4*thetadot2*sin(theta_1)*cos(theta_2)*cos(theta_3) - l4*thetadot3*sin(theta_1)*sin(theta_2)*sin(theta_3) - l4*thetadot3*cos(theta_1)*cos(theta_3) - l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1) + l5*thetadot1*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_1)*cos(theta_3 + theta_4)*cos(theta_2) - l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*thetadot1*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_1)*cos(theta_3 + theta_4 + theta_5)*cos(theta_2);
    double J_foot_dot_2 = (l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*cos(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot1*sin(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2)*cos(theta_1);
    double J_foot_dot_3 = -l4*thetadot1*sin(theta_1)*sin(theta_2)*sin(theta_3) - l4*thetadot1*cos(theta_1)*cos(theta_3) + l4*thetadot2*sin(theta_3)*cos(theta_1)*cos(theta_2) + l4*thetadot3*sin(theta_1)*sin(theta_3) + l4*thetadot3*sin(theta_2)*cos(theta_1)*cos(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*thetadot1*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_4 = l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l5*thetadot1*sin(theta_3 + theta_4)*sin(theta_1)*sin(theta_2) - l5*thetadot1*cos(theta_3 + theta_4)*cos(theta_1) + l5*thetadot2*sin(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - l6*thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_5 = l6*((thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) - thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*sin(theta_2) - thetadot1*cos(theta_3 + theta_4 + theta_5)*cos(theta_1) + thetadot2*sin(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2));
    double J_foot_dot_6 = l3*thetadot1*sin(theta_1)*sin(theta_2) - l3*thetadot2*cos(theta_1)*cos(theta_2) + l4*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3) - l4*thetadot1*sin(theta_3)*cos(theta_1) - l4*thetadot2*cos(theta_1)*cos(theta_2)*cos(theta_3) - l4*thetadot3*sin(theta_1)*cos(theta_3) + l4*thetadot3*sin(theta_2)*sin(theta_3)*cos(theta_1) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - l5*(thetadot3 + thetadot4)*sin(theta_1)*cos(theta_3 + theta_4) - l5*thetadot1*sin(theta_3 + theta_4)*cos(theta_1) + l5*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) - l5*thetadot2*cos(theta_3 + theta_4)*cos(theta_1)*cos(theta_2) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) - l6*thetadot1*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + l6*thetadot1*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) - l6*thetadot2*cos(theta_3 + theta_4 + theta_5)*cos(theta_1)*cos(theta_2);
    double J_foot_dot_7 = (l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*sin(theta_1)*cos(theta_2) - (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot1*cos(theta_1)*cos(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_1)*sin(theta_2);
    double J_foot_dot_8 = l4*(-thetadot1*sin(theta_1)*cos(theta_3) + thetadot1*sin(theta_2)*sin(theta_3)*cos(theta_1) + thetadot2*sin(theta_1)*sin(theta_3)*cos(theta_2) + thetadot3*sin(theta_1)*sin(theta_2)*cos(theta_3) - thetadot3*sin(theta_3)*cos(theta_1)) + l5*(-(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*cos(theta_1) + (thetadot3 + thetadot4)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + thetadot1*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4) + thetadot2*sin(theta_3 + theta_4)*sin(theta_1)*cos(theta_2)) + l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_9 = l5*(-(thetadot3 + thetadot4)*sin(theta_3 + theta_4)*cos(theta_1) + (thetadot3 + thetadot4)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4) + thetadot1*sin(theta_3 + theta_4)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4) + thetadot2*sin(theta_3 + theta_4)*sin(theta_1)*cos(theta_2)) + l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_10 = l6*(-(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5)*cos(theta_1) + (thetadot3 + thetadot4 + thetadot5)*sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5) + thetadot1*sin(theta_3 + theta_4 + theta_5)*sin(theta_2)*cos(theta_1) - thetadot1*sin(theta_1)*cos(theta_3 + theta_4 + theta_5) + thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_1)*cos(theta_2));
    double J_foot_dot_11 = 0;
    double J_foot_dot_12 = -(l4*thetadot3*sin(theta_3) + l5*(thetadot3 + thetadot4)*sin(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*sin(theta_3 + theta_4 + theta_5))*sin(theta_2) + (l3 + l4*cos(theta_3) + l5*cos(theta_3 + theta_4) + l6*cos(theta_3 + theta_4 + theta_5))*thetadot2*cos(theta_2);
    double J_foot_dot_13 = -(l4*sin(theta_3) + l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2) + (l4*thetadot3*cos(theta_3) + l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_dot_14 = -(l5*sin(theta_3 + theta_4) + l6*sin(theta_3 + theta_4 + theta_5))*thetadot2*sin(theta_2) + (l5*(thetadot3 + thetadot4)*cos(theta_3 + theta_4) + l6*(thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5))*cos(theta_2);
    double J_foot_dot_15 = l6*((thetadot3 + thetadot4 + thetadot5)*cos(theta_3 + theta_4 + theta_5)*cos(theta_2) - thetadot2*sin(theta_3 + theta_4 + theta_5)*sin(theta_2));
    
    J_foot_dot_right_leg << J_foot_dot_1, J_foot_dot_2, J_foot_dot_3, J_foot_dot_4, J_foot_dot_5,
                            J_foot_dot_6, J_foot_dot_7, J_foot_dot_8, J_foot_dot_9, J_foot_dot_10,
                            J_foot_dot_11, J_foot_dot_12, J_foot_dot_13, J_foot_dot_14, J_foot_dot_15;
}

void update_Lambda_right_leg() {
    // Lambda_t = np.linalg.inv(J_t.dot(B_t_inv).dot(J_t.T))
    Lambda_right_leg = (J_foot_right_leg * B_right_leg.inverse() * J_foot_right_leg.transpose()).inverse();
}

void update_Kp_right_leg() {
    Kp_right_leg << pow(omega_desired, 2) * Lambda_right_leg(0, 0), 0, 0,
                    0, pow(omega_desired, 2) * Lambda_right_leg(1, 1), 0,
                    0, 0, pow(omega_desired, 2) * Lambda_right_leg(2, 2);
}

void update_Kd_right_leg() {
    Kd_right_leg << 0.2, 0, 0,
                   0, 0.2, 0,
                   0, 0, 0.2;
}

void update_tau_ff_right_leg() {
    //tau_ff = J_t.T.dot(Lambda_t).dot(a_des - J_dot_t.dot(q_dot_t)) + C_t + g_t
    tau_ff_right_leg = G_right_leg /* + C* + J_foot.transpose() * Lambda * (accel_desired - J_foot_dot * q_dot)*/;
}

void update_foot_pos_right_leg(double theta_1, double theta_2, double theta_3, double theta_4, double theta_5,
 double thetadot1, double thetadot2, double thetadot3, double thetadot4, double thetadot5) {
    double foot_pos_1 = -l3*sin(theta_2)*cos(theta_1) - l4*sin(theta_1)*sin(theta_3) - l4*sin(theta_2)*cos(theta_1)*cos(theta_3) - l5*sin(theta_3 + theta_4)*sin(theta_1) - l5*sin(theta_2)*cos(theta_3 + theta_4)*cos(theta_1) - l6*sin(theta_3 + theta_4 + theta_5)*sin(theta_1) - l6*sin(theta_2)*cos(theta_3 + theta_4 + theta_5)*cos(theta_1);
    double foot_pos_2 = -l3*sin(theta_1)*sin(theta_2) - l4*(sin(theta_1)*sin(theta_2)*cos(theta_3) - sin(theta_3)*cos(theta_1)) + l5*(sin(theta_3 + theta_4)*cos(theta_1) - sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4)) + l6*(sin(theta_3 + theta_4 + theta_5)*cos(theta_1) - sin(theta_1)*sin(theta_2)*cos(theta_3 + theta_4 + theta_5));
    double foot_pos_3 = -l1 - l2 - l3*cos(theta_2) - l4*cos(theta_2)*cos(theta_3) - l5*cos(theta_3 + theta_4)*cos(theta_2) - l6*cos(theta_3 + theta_4 + theta_5)*cos(theta_2);

    foot_pos_right_leg << foot_pos_1,
                         foot_pos_2,
                         foot_pos_3;
}

void update_foot_vel_right_leg(Eigen::Matrix<double, 5, 1> q_dot) {
    foot_vel_right_leg = J_foot_right_leg * q_dot;
}

void update_tau_setpoint_right_leg() {
    //tau_setpoint_t = J_t.T.dot(K_p.dot(p_des - p_t) + K_d.dot(v_des - v_t)) + tau_ff_t
    tau_setpoint_right_leg = J_foot_right_leg.transpose() * (Kp_right_leg * (pos_desired_right_leg - foot_pos_right_leg) + Kd_right_leg * (vel_desired_right_leg - foot_vel_right_leg)) + tau_ff_right_leg;
}

#pragma endregion Right leg

std::vector<std::string> split_string(std::string str, char delimiter) {
    std::vector<std::string> results;

    boost::split(results, str, [&delimiter](char c){return c == delimiter;});

    return results;
}

std::thread left_leg_state_thread;
std::thread right_leg_state_thread;

std::thread left_leg_torque_thread;
std::thread right_leg_torque_thread;

double state_update_interval = 1000.0; //microseconds
double torque_calculation_interval = 1500.0; //microseconds

void update_left_leg_state() {

    high_resolution_clock::time_point start = high_resolution_clock::now();
    high_resolution_clock::time_point end = high_resolution_clock::now();

    double duration = 0.0f;

    zmq::context_t context(1);
    // zmq::socket_t subscriber (context, ZMQ_SUB);
    
    // subscriber.connect("tcp://127.0.0.1:1337");
    // subscriber.setsockopt(ZMQ_SUBSCRIBE, "lState", 0);

    struct timespec deadline;

    while(true) {
        // This timed loop approach calculates the time that the execution of the main code took,
        // then calculates the remaining time for the loop and waits this duration.
        start = high_resolution_clock::now();
        //Do stuff
        end = high_resolution_clock::now();
        duration = duration_cast<microseconds>(end - start).count();  
        long long remainder = (state_update_interval - duration) * 1e+03;
        deadline.tv_nsec = remainder;
        deadline.tv_sec = 0;
        clock_nanosleep(CLOCK_REALTIME, 0, &deadline, NULL);
    }
}

void update_right_leg_state() {
    high_resolution_clock::time_point start = high_resolution_clock::now();
    high_resolution_clock::time_point end = high_resolution_clock::now();

    struct timespec deadline;

    double duration = 0.0f;

    zmq::context_t context(1);
    zmq::socket_t subscriber (context, ZMQ_SUB);
    
    subscriber.connect("tcp://127.0.0.1:9999");
    subscriber.setsockopt(ZMQ_SUBSCRIBE, "rState", 0);

    while(true) {
        // This timed loop approach calculates the time that the execution of the main code took,
        // then calculates the remaining time for the loop and waits this duration.
        
        start = high_resolution_clock::now();

        zmq::message_t msg;
        subscriber.recv(&msg);

        std::string data = std::string(static_cast<char*>(msg.data()), msg.size());

        std::vector<std::string> state_no_topic = split_string(data, ' ');
        std::vector<std::string> state = split_string(state_no_topic[1], '|');

        if(static_cast<int>(state.size()) >= 9) {

            double q_1 = atof(state[0].c_str());
            double q_2 = atof(state[1].c_str());
            double q_3 = atof(state[2].c_str());
            double q_4 = atof(state[3].c_str());
            double q_5 = atof(state[4].c_str());

            double q_dot_1 = atof(state[5].c_str());
            double q_dot_2 = atof(state[6].c_str());
            double q_dot_3 = atof(state[7].c_str());
            double q_dot_4 = atof(state[8].c_str());
            double q_dot_5 = atof(state[9].c_str());

            //try to use std::lock in future
            q_right_leg_mutex.lock();

            q_right_leg << q_1,
                            q_2,
                            q_3,
                            q_4,
                            q_5;

            q_right_leg_mutex.unlock();

            q_dot_right_leg_mutex.lock();

            q_dot_right_leg << q_dot_1,
                                q_dot_2,
                                q_dot_3,
                                q_dot_4,
                                q_dot_5;

            q_dot_right_leg_mutex.unlock();
        }

        end = high_resolution_clock::now();
        duration = duration_cast<microseconds>(end - start).count();
        long long remainder = (state_update_interval - duration) * 1e+03;
        deadline.tv_nsec = remainder;
        deadline.tv_sec = 0;
        clock_nanosleep(CLOCK_REALTIME, 0, &deadline, NULL);
    }
}

void calculate_left_leg_torques() {

    high_resolution_clock::time_point start = high_resolution_clock::now();
    high_resolution_clock::time_point end = high_resolution_clock::now();

    struct timespec deadline;

    double duration = 0.0f;

    Eigen::Matrix<double, 5, 1> q_temp;
    Eigen::Matrix<double, 5, 1> q_dot_temp;

    zmq::context_t context(1);	
    zmq::socket_t publisher(context, ZMQ_PUB);

    publisher.setsockopt(ZMQ_SNDHWM, 100);
    publisher.bind("tcp://*:42000");
    
    zmq::socket_t subscriber (context, ZMQ_SUB);
    subscriber.connect("tcp://127.0.0.1:9998");
    subscriber.setsockopt(ZMQ_SUBSCRIBE, "lState", 0);

    while(true) {

        start = high_resolution_clock::now();

        zmq::message_t msg_recv;
        subscriber.recv(&msg_recv);

        std::string data = std::string(static_cast<char*>(msg_recv.data()), msg_recv.size());

        std::vector<std::string> state_no_topic = split_string(data, ' ');
        std::vector<std::string> state = split_string(state_no_topic[1], '|');

        if(static_cast<int>(state.size()) >= 9) {

            double q_1 = atof(state[0].c_str());
            double q_2 = atof(state[1].c_str());
            double q_3 = atof(state[2].c_str());
            double q_4 = atof(state[3].c_str());
            double q_5 = atof(state[4].c_str());

            double q_dot_1 = atof(state[5].c_str());
            double q_dot_2 = atof(state[6].c_str());
            double q_dot_3 = atof(state[7].c_str());
            double q_dot_4 = atof(state[8].c_str());
            double q_dot_5 = atof(state[9].c_str());

            //std::cout << q_1 << std::endl;

            //try to use std::lock in future
            //std::lock(q_left_leg_mutex, q_dot_left_leg_mutex);

            q_left_leg << q_1,
                            q_2,
                            q_3,
                            q_4,
                            q_5;

            //std::cout << q_left_leg << std::endl;

            //q_left_leg_mutex.unlock();

            q_dot_left_leg << q_dot_1,
                                q_dot_2,
                                q_dot_3,
                                q_dot_4,
                                q_dot_5;

            //q_dot_left_leg_mutex.unlock();
        }

        q_temp = q_left_leg;

        //q_dot_left_leg_mutex.unlock();

        q_dot_temp = q_dot_left_leg;

        //q_dot_left_leg_mutex.unlock();

        double theta1 = q_temp(0);
        double theta2 = q_temp(1);
        double theta3 = q_temp(2);
        double theta4 = q_temp(3);
        double theta5 = q_temp(4);

        //std::cout << q_temp << std::endl;

        double theta1_dot = q_dot_temp(0);
        double theta2_dot = q_dot_temp(1);
        double theta3_dot = q_dot_temp(2);
        double theta4_dot = q_dot_temp(3);
        double theta5_dot = q_dot_temp(4);

        high_resolution_clock::time_point t2_temp = high_resolution_clock::now();

        update_B_left_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);

        update_J_foot_left_leg(theta1, theta2, theta3, theta4, theta5);

        update_J_foot_dot_left_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);

        update_G_left_leg(theta1, theta2, theta3, theta4, theta5);

        //update_C_left_leg

        update_Lambda_left_leg();

        update_tau_ff_left_leg();

        update_Kp_left_leg();
        update_Kd_left_leg();

        update_foot_pos_left_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);
        update_foot_vel_left_leg(q_dot_temp);

        update_tau_setpoint_left_leg();

        for(int i = 0; i < 5; ++i) {
            //tau_setpoint_left_leg(i) = -tau_setpoint_left_leg(i);
            if(isnan(tau_setpoint_left_leg(i))) {
                tau_setpoint_left_leg(i) = 0;
            }
            if(tau_setpoint_left_leg(i) > upper_torque_limit) {
                tau_setpoint_left_leg(i) = upper_torque_limit;
            }
            if(tau_setpoint_left_leg(i) < lower_torque_limit) {
                tau_setpoint_left_leg(i) = lower_torque_limit;
            }
        }

        std::stringstream s;
        s << "lTorques " << G_left_leg(0) << "|" << G_left_leg(1) << "|" << G_left_leg(2) << "|" << G_left_leg(3) << "|" << G_left_leg(4);

        auto msg = s.str();
        zmq::message_t message(msg.length());
        
        memcpy(message.data(), msg.c_str(), msg.length());
        
        publisher.send(message);

        std::cout << msg << std::endl;

        end = high_resolution_clock::now();

        duration = duration_cast<microseconds>(end - start).count();
        long long remainder = (torque_calculation_interval - duration) * 1e+03;
        deadline.tv_nsec = remainder;
        deadline.tv_sec = 0;
        clock_nanosleep(CLOCK_REALTIME, 0, &deadline, NULL);
    }
}

void calculate_right_leg_torques() {
    //limit to 1kHz
    high_resolution_clock::time_point start = high_resolution_clock::now();
    high_resolution_clock::time_point end = high_resolution_clock::now();

    struct timespec deadline;

    double duration = 0.0f;

    Eigen::Matrix<double, 5, 1> q_temp;
    Eigen::Matrix<double, 5, 1> q_dot_temp;

    zmq::context_t context(1);	
    zmq::socket_t publisher(context, ZMQ_PUB);

    publisher.setsockopt(ZMQ_SNDHWM, 100);
    publisher.bind("tcp://*:42001");
    
    zmq::socket_t subscriber (context, ZMQ_SUB);
    subscriber.connect("tcp://127.0.0.1:9999");
    subscriber.setsockopt(ZMQ_SUBSCRIBE, "rState", 0);

    while(true) {
        start = high_resolution_clock::now();

        zmq::message_t msg_recv;
        subscriber.recv(&msg_recv);

        std::string data = std::string(static_cast<char*>(msg_recv.data()), msg_recv.size());

        std::vector<std::string> state_no_topic = split_string(data, ' ');
        std::vector<std::string> state = split_string(state_no_topic[1], '|');

        if(static_cast<int>(state.size()) >= 9) {

            double q_1 = atof(state[0].c_str());
            double q_2 = atof(state[1].c_str());
            double q_3 = atof(state[2].c_str());
            double q_4 = atof(state[3].c_str());
            double q_5 = atof(state[4].c_str());

            double q_dot_1 = atof(state[5].c_str());
            double q_dot_2 = atof(state[6].c_str());
            double q_dot_3 = atof(state[7].c_str());
            double q_dot_4 = atof(state[8].c_str());
            double q_dot_5 = atof(state[9].c_str());

            //std::cout << q_1 << std::endl;

            //try to use std::lock in future
            //std::lock(q_right_leg_mutex, q_dot_right_leg_mutex);

            q_right_leg << q_1,
                            q_2,
                            q_3,
                            q_4,
                            q_5;

            //std::cout << q_right_leg << std::endl;

            //q_right_leg_mutex.unlock();

            q_dot_right_leg << q_dot_1,
                                q_dot_2,
                                q_dot_3,
                                q_dot_4,
                                q_dot_5;

            //q_dot_right_leg_mutex.unlock();
        }

        q_temp = q_right_leg;

        //q_dot_right_leg_mutex.unlock();

        q_dot_temp = q_dot_right_leg;

        //q_dot_right_leg_mutex.unlock();

        double theta1 = q_temp(0);
        double theta2 = q_temp(1);
        double theta3 = q_temp(2);
        double theta4 = q_temp(3);
        double theta5 = q_temp(4);

        //std::cout << q_temp << std::endl;

        double theta1_dot = q_dot_temp(0);
        double theta2_dot = q_dot_temp(1);
        double theta3_dot = q_dot_temp(2);
        double theta4_dot = q_dot_temp(3);
        double theta5_dot = q_dot_temp(4);

        update_B_right_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);

        update_J_foot_right_leg(theta1, theta2, theta3, theta4, theta5);

        update_J_foot_dot_right_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);

        update_G_right_leg(theta1, theta2, theta3, theta4, theta5);

        //update_C_right_leg

        update_Lambda_right_leg();

        update_tau_ff_right_leg();

        update_Kp_right_leg();
        update_Kd_right_leg();

        update_foot_pos_right_leg(theta1, theta2, theta3, theta4, theta5, theta1_dot, theta2_dot, theta3_dot, theta4_dot, theta5_dot);
        update_foot_vel_right_leg(q_dot_temp);

        update_tau_setpoint_right_leg();

        for(int i = 0; i < 5; ++i) {
            //tau_setpoint_right_leg(i) = -tau_setpoint_right_leg(i);
            if(isnan(tau_setpoint_right_leg(i))) {
                tau_setpoint_right_leg(i) = 0;
            }
            if(tau_setpoint_right_leg(i) > 100) {
                tau_setpoint_right_leg(i) = 100;
            }
            if(tau_setpoint_right_leg(i) < -100) {
                tau_setpoint_right_leg(i) = -100;
            }
        }

        std::stringstream s;
        s << "rTorques " << tau_setpoint_right_leg(0) << "|" << tau_setpoint_right_leg(1) << "|" << tau_setpoint_right_leg(2) << "|" << tau_setpoint_right_leg(3) << "|" << tau_setpoint_right_leg(4);

        auto msg = s.str();
        zmq::message_t message(msg.length());
        
        memcpy(message.data(), msg.c_str(), msg.length());

        std::cout << s.str() << std::endl;
        
        publisher.send(message);

        end = high_resolution_clock::now();
        duration = duration_cast<microseconds>(end - start).count();
        long long remainder = (torque_calculation_interval - duration) * 1e+03;
        deadline.tv_nsec = remainder;
        deadline.tv_sec = 0;
        clock_nanosleep(CLOCK_REALTIME, 0, &deadline, NULL);
    }
}


int main()
{
    pos_desired_left_leg << 0.2, -0.4, -0.5;
    vel_desired_left_leg << 0, 0, 0;
    accel_desired_left_leg << 0, 0, 0;

    pos_desired_right_leg << -0.2, 0.4, -0.5;
    vel_desired_right_leg << 0, 0, 0;
    accel_desired_right_leg << 0, 0, 0;
    
    //left_leg_state_thread = std::thread(std::bind(update_left_leg_state));
    //right_leg_state_thread = std::thread(std::bind(update_right_leg_state));
    left_leg_torque_thread = std::thread(std::bind(calculate_left_leg_torques));
    //right_leg_torque_thread = std::thread(std::bind(calculate_right_leg_torques));

    //update_G_left_leg(0, 1.57, 0, 0, 0);

    //std::cout << G_left_leg << std::endl;

    while(true) {
        //std::cout << foot_pos_left_leg(2) << std::endl;
    }
}